{"version":3,"file":"web3-core-helpers.umd.js","sources":["../src/errors/JsonRpcResponseError.js","../src/errors/NoConnectionError.js","../src/errors/NodeConnectionTimeoutError.js","../src/errors/InvalidProviderError.js","../src/errors/InvalidParametersLengthError.js","../src/Errors.js","../node_modules/underscore-es/_quickaccess.js","../node_modules/underscore-es/isString.js","../node_modules/underscore-es/isArray.js","../node_modules/underscore-es/isObject.js","../node_modules/underscore-es/isNumber.js","../src/Formatters.js","../src/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file JsonRpcResponseError.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nexport default class JsonRpcResponseError extends Error {\n    /**\n     * @param {Object} response\n     *\n     * @constructor\n     */\n    constructor(response) {\n        super(`Invalid JSON RPC response: ${JSON.stringify(result)}`);\n    }\n}\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file NoConnectionError.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nexport default class NoConnectionError extends Error {\n    /**\n     * @param {String} host\n     *\n     * @constructor\n     */\n    constructor(host) {\n        super(`CONNECTION ERROR: Couldn't connect to node ${host}.`);\n    }\n}\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file NoConnectionError.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nexport default class NodeConnectionTimeoutError extends Error {\n    /**\n     * @param {Number} ms\n     *\n     * @constructor\n     */\n    constructor(ms) {\n        super(`CONNECTION TIMEOUT: timeout of ${ms} ms achived`);\n    }\n}\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file InvalidProviderError.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nexport default class InvalidProviderError extends Error {\n    /**\n     * @param {String} providerName\n     *\n     * @constructor\n     */\n    constructor(providerName) {\n        super(`Invalid provider: ${providerName}`);\n    }\n}\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file InvalidParametersLengthError.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nexport default class InvalidParametersLengthError extends Error {\n    /**\n     * @param {String} got\n     * @param {String} expected\n     * @param {String} method\n     *\n     * @constructor\n     */\n    constructor(got, expected, method) {\n        super(`Invalid number of parameters for \"${method}\". Got ${got} expected ${expected}!`);\n    }\n}\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Errors.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n// TODO: Create a simple Logger class to handle logs. Maybe the winston project would be good for it.\nexport JsonRpcResponseError from './errors/JsonRpcResponseError';\nexport NoConnectionError from './errors/NoConnectionError';\nexport NodeConnectionTimeoutError from './errors/NodeConnectionTimeoutError';\nexport InvalidProviderError from './errors/InvalidProviderError';\nexport InvalidParametersLengthError from './errors/InvalidParametersLengthError';\n","// quick reference variables for speed access\n//-------------------------------------------\n\n// Save bytes in the minified (but not gzipped) version:\nexport const ArrayProto = Array.prototype;\nexport const ObjProto = Object.prototype;\nexport const SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport const push = ArrayProto.push;\nexport const slice = ArrayProto.slice;\nexport const toString = ObjProto.toString;\nexport const hasOwnProperty = ObjProto.hasOwnProperty;\n\n// All **ECMAScript 5** native function implementations that we hope to use\n// are declared here.\nexport const nativeIsArray = Array.isArray;\nexport const nativeKeys = Object.keys;\nexport const nativeCreate = Object.create;\n\n// Naked function reference for surrogate-prototype-swapping.\nexport const Ctor = function () {};","// `_isString` : an object's function\n// -----------------------------------\n\nimport {toString} from './_quickaccess';\n\n// Is a given value a string?\nexport default function (obj) {\n\treturn toString.call(obj) === '[object String]';\n}","// `_isArray` : an object's function\n// ----------------------------------\n\nimport {nativeIsArray, toString} from './_quickaccess';\n\n// Is a given value an array?\n// Delegates to ECMA5's native Array.isArray\nexport var _isArray = nativeIsArray || function (obj) {\n\treturn toString.call(obj) === '[object Array]';\n}\n\nexport {_isArray as default};","// `_isObject` : an object's function\n// -----------------------------------\n\n// Is a given variable an object?\nexport default function (obj) {\n\tvar type = typeof obj;\n\treturn type === 'function' || type === 'object' && !!obj;\n}","// `_isNumber` : an object's function\n// -----------------------------------\n\nimport {toString} from './_quickaccess';\n\n// Is a given value a number?\nexport default function (obj) {\n\treturn toString.call(obj) === '[object Number]';\n}","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Formatters.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\nimport isString from 'underscore-es/isString';\nimport isArray from 'underscore-es/isArray';\nimport isObject from 'underscore-es/isObject';\nimport isNumber from 'underscore-es/isNumber';\nimport * as Utils from 'web3-utils';\nimport {Iban} from 'web3-eth-iban';\n\n/**\n * Should format the output to a object of type BigNumber\n *\n * @method outputBigNumberFormatter\n *\n * @param {String|Number|BigNumber} number\n *\n * @returns {BigNumber} object\n */\nexport const outputBigNumberFormatter = (number) => {\n    return Utils.toBN(number).toString(10);\n};\n\n/**\n * @method isPredefinedBlockNumber\n *\n * @param {String|Number} blockNumber\n *\n * @returns {Boolean}\n */\nexport const isPredefinedBlockNumber = (blockNumber) => {\n    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n};\n\n/**\n * Determines if it should use the default block by the given package or not,\n * will map 'genesis' and 'earlist' to '0x0' and runs the inputBlockNumberFormatter.\n *\n * @param {String|Number} blockNumber\n * @param {AbstractWeb3Module} moduleInstance\n *\n * @returns {String}\n */\nexport const inputDefaultBlockNumberFormatter = (blockNumber, moduleInstance) => {\n    if (blockNumber === undefined || blockNumber === null) {\n        return moduleInstance.defaultBlock;\n    }\n\n    if (blockNumber === 'genesis' || blockNumber === 'earliest') {\n        return '0x0';\n    }\n\n    return inputBlockNumberFormatter(blockNumber);\n};\n\n/**\n * @method inputBlockNumberFormatter\n *\n * @param {String|Number} blockNumber\n *\n * @returns {undefined|Number|String}\n */\nexport const inputBlockNumberFormatter = (blockNumber) => {\n    if (blockNumber === undefined) {\n        return undefined;\n    }\n\n    if (isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n    }\n\n    if (Utils.isHexStrict(blockNumber)) {\n        if (isString(blockNumber)) {\n            return blockNumber.toLowerCase();\n        }\n\n        return blockNumber;\n    }\n\n    return Utils.numberToHex(blockNumber);\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method _txInputFormatter\n *\n * @param {Object} txObject\n *\n * @returns {Object}\n */\nexport const _txInputFormatter = (txObject) => {\n    if (txObject.to) {\n        // it might be contract creation\n        txObject.to = inputAddressFormatter(txObject.to);\n    }\n\n    if (txObject.data && txObject.input) {\n        throw new Error(\n            'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.'\n        );\n    }\n\n    if (!txObject.data && txObject.input) {\n        txObject.data = txObject.input;\n        delete txObject.input;\n    }\n\n    if (txObject.data && !Utils.isHex(txObject.data)) {\n        throw new Error('The data field must be HEX encoded data.');\n    }\n\n    // allow both\n    if (txObject.gas || txObject.gasLimit) {\n        txObject.gas = txObject.gas || txObject.gasLimit;\n    }\n\n    ['gasPrice', 'gas', 'value', 'nonce']\n        .filter((key) => {\n            return txObject[key] !== undefined;\n        })\n        .forEach((key) => {\n            txObject[key] = Utils.numberToHex(txObject[key]);\n        });\n\n    return txObject;\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputCallFormatter\n *\n * @param {Object} options\n * @param {AbstractWeb3Module} moduleInstance\n *\n * @returns object\n */\nexport const inputCallFormatter = (options, moduleInstance) => {\n    options = _txInputFormatter(options);\n    let from = moduleInstance.defaultAccount;\n\n    if (options.from) {\n        from = options.from;\n    }\n\n    if (from) {\n        options.from = inputAddressFormatter(from);\n    }\n\n    return options;\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputTransactionFormatter\n *\n * @param {Object} options\n * @param {AbstractWeb3Module} moduleInstance\n *\n * @returns object\n */\nexport const inputTransactionFormatter = (options, moduleInstance) => {\n    options = _txInputFormatter(options);\n\n    if (!isNumber(options.from) && !isObject(options.from)) {\n        if (!options.from) {\n            options.from = moduleInstance.defaultAccount;\n        }\n\n        if (!options.from && !isNumber(options.from)) {\n            throw new Error('The send transactions \"from\" field must be defined!');\n        }\n\n        options.from = inputAddressFormatter(options.from);\n    }\n\n    return options;\n};\n\n/**\n * Hex encodes the data passed to eth_sign and personal_sign\n *\n * @method inputSignFormatter\n *\n * @param {String} data\n *\n * @returns {String}\n */\nexport const inputSignFormatter = (data) => {\n    return Utils.isHexStrict(data) ? data : Utils.utf8ToHex(data);\n};\n\n/**\n * Formats the output of a transaction to its proper values\n *\n * @method outputTransactionFormatter\n *\n * @param {Object} tx\n *\n * @returns {Object}\n */\nexport const outputTransactionFormatter = (tx) => {\n    if (tx.blockNumber !== null) tx.blockNumber = Utils.hexToNumber(tx.blockNumber);\n    if (tx.transactionIndex !== null) tx.transactionIndex = Utils.hexToNumber(tx.transactionIndex);\n    tx.nonce = Utils.hexToNumber(tx.nonce);\n    tx.gas = Utils.hexToNumber(tx.gas);\n    tx.gasPrice = outputBigNumberFormatter(tx.gasPrice);\n    tx.value = outputBigNumberFormatter(tx.value);\n\n    if (tx.to && Utils.isAddress(tx.to)) {\n        // tx.to could be `0x0` or `null` while contract creation\n        tx.to = Utils.toChecksumAddress(tx.to);\n    } else {\n        tx.to = null; // set to `null` if invalid address\n    }\n\n    if (tx.from) {\n        tx.from = Utils.toChecksumAddress(tx.from);\n    }\n\n    return tx;\n};\n\n/**\n * Formats the output of a transaction receipt to its proper values\n *\n * @method outputTransactionReceiptFormatter\n *\n * @param {Object} receipt\n *\n * @returns {Object}\n */\nexport const outputTransactionReceiptFormatter = (receipt) => {\n    if (typeof receipt !== 'object') {\n        throw new TypeError(`Received receipt is invalid: ${receipt}`);\n    }\n\n    if (receipt.blockNumber !== null) receipt.blockNumber = Utils.hexToNumber(receipt.blockNumber);\n    if (receipt.transactionIndex !== null) receipt.transactionIndex = Utils.hexToNumber(receipt.transactionIndex);\n    receipt.cumulativeGasUsed = Utils.hexToNumber(receipt.cumulativeGasUsed);\n    receipt.gasUsed = Utils.hexToNumber(receipt.gasUsed);\n\n    if (isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(outputLogFormatter);\n    }\n\n    if (receipt.contractAddress) {\n        receipt.contractAddress = Utils.toChecksumAddress(receipt.contractAddress);\n    }\n\n    if (typeof receipt.status !== 'undefined') {\n        receipt.status = Boolean(parseInt(receipt.status));\n    }\n\n    return receipt;\n};\n\n/**\n * Formats the output of a block to its proper values\n *\n * @method outputBlockFormatter\n *\n * @param {Object} block\n *\n * @returns {Object}\n */\nexport const outputBlockFormatter = (block) => {\n    // transform to number\n    block.gasLimit = Utils.hexToNumber(block.gasLimit);\n    block.gasUsed = Utils.hexToNumber(block.gasUsed);\n    block.size = Utils.hexToNumber(block.size);\n    block.timestamp = Utils.hexToNumber(block.timestamp);\n    if (block.number !== null) block.number = Utils.hexToNumber(block.number);\n\n    if (block.difficulty) block.difficulty = outputBigNumberFormatter(block.difficulty);\n    if (block.totalDifficulty) block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n\n    if (isArray(block.transactions)) {\n        block.transactions.forEach((item) => {\n            if (!isString(item)) return outputTransactionFormatter(item);\n        });\n    }\n\n    if (block.miner) block.miner = Utils.toChecksumAddress(block.miner);\n\n    return block;\n};\n\n/**\n * Formats the input of a log\n *\n * @method inputLogFormatter\n *\n * @param {Object} options\n *\n * @returns {Object} log\n */\nexport const inputLogFormatter = (options) => {\n    let toTopic = (value) => {\n        if (value === null || typeof value === 'undefined') return null;\n\n        value = String(value);\n\n        if (value.indexOf('0x') === 0) return value;\n        else return Utils.fromUtf8(value);\n    };\n\n    if (options.fromBlock) options.fromBlock = inputBlockNumberFormatter(options.fromBlock);\n\n    if (options.toBlock) options.toBlock = inputBlockNumberFormatter(options.toBlock);\n\n    // make sure topics, get converted to hex\n    options.topics = options.topics || [];\n    options.topics = options.topics.map((topic) => {\n        return isArray(topic) ? topic.map(toTopic) : toTopic(topic);\n    });\n\n    toTopic = null;\n\n    if (options.address) {\n        if (isArray(options.address)) {\n            options.address = options.address.map((addr) => {\n                return inputAddressFormatter(addr);\n            });\n        } else {\n            options.address = inputAddressFormatter(options.address);\n        }\n    }\n\n    return options;\n};\n\n/**\n * Formats the output of a log\n *\n * @method outputLogFormatter\n *\n * @param {Object} log object\n *\n * @returns {Object} log\n */\nexport const outputLogFormatter = (log) => {\n    // generate a custom log id\n    if (\n        typeof log.blockHash === 'string' &&\n        typeof log.transactionHash === 'string' &&\n        typeof log.logIndex === 'string'\n    ) {\n        const shaId = Utils.sha3(\n            log.blockHash.replace('0x', '') + log.transactionHash.replace('0x', '') + log.logIndex.replace('0x', '')\n        );\n\n        shaId.replace('0x', '').substr(0, 8);\n\n        log.id = `log_${shaId}`;\n    } else if (!log.id) {\n        log.id = null;\n    }\n\n    if (log.blockNumber !== null) {\n        log.blockNumber = Utils.hexToNumber(log.blockNumber);\n    }\n\n    if (log.transactionIndex !== null) {\n        log.transactionIndex = Utils.hexToNumber(log.transactionIndex);\n    }\n\n    if (log.logIndex !== null) {\n        log.logIndex = Utils.hexToNumber(log.logIndex);\n    }\n\n    if (log.address) {\n        log.address = Utils.toChecksumAddress(log.address);\n    }\n\n    return log;\n};\n\n/**\n * Formats the input of a whisper post and converts all values to HEX\n *\n * @method inputPostFormatter\n *\n * @param {Object} post\n *\n * @returns {Object}\n */\nexport const inputPostFormatter = (post) => {\n    if (post.ttl) {\n        post.ttl = Utils.numberToHex(post.ttl);\n    }\n\n    if (post.workToProve) {\n        post.workToProve = Utils.numberToHex(post.workToProve);\n    }\n\n    if (post.priority) {\n        post.priority = Utils.numberToHex(post.priority);\n    }\n\n    // fallback\n    if (!isArray(post.topics)) {\n        post.topics = post.topics ? [post.topics] : [];\n    }\n\n    // format the following options\n    post.topics = post.topics.map((topic) => {\n        // convert only if not hex\n        return topic.indexOf('0x') === 0 ? topic : Utils.fromUtf8(topic);\n    });\n\n    return post;\n};\n\n/**\n * Formats the output of a received post message\n *\n * @method outputPostFormatter\n *\n * @param {Object} post\n *\n * @returns {Object}\n */\nexport const outputPostFormatter = (post) => {\n    post.expiry = Utils.hexToNumber(post.expiry);\n    post.sent = Utils.hexToNumber(post.sent);\n    post.ttl = Utils.hexToNumber(post.ttl);\n    post.workProved = Utils.hexToNumber(post.workProved);\n    // post.payloadRaw = post.payload;\n    // post.payload = Utils.hexToAscii(post.payload);\n\n    // if (Utils.isJson(post.payload)) {\n    //     post.payload = JSON.parse(post.payload);\n    // }\n\n    // format the following options\n    if (!post.topics) {\n        post.topics = [];\n    }\n\n    post.topics = post.topics.map((topic) => {\n        return Utils.toUtf8(topic);\n    });\n\n    return post;\n};\n\n/**\n * @method inputAddressFormatter\n *\n * @param address\n *\n * @returns {String}\n * @throws {Error}\n */\nexport const inputAddressFormatter = (address) => {\n    const iban = new Iban(address);\n\n    if (iban.isValid() && iban.isDirect()) {\n        return iban.toAddress().toLowerCase();\n    } else if (Utils.isAddress(address)) {\n        return `0x${address.toLowerCase().replace('0x', '')}`;\n    }\n\n    throw new Error(\n        `Provided address \"${address}\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can't be converted.`\n    );\n};\n\n/**\n * @method outputSyncingFormatter\n *\n * @param {Object} result\n *\n * @returns {Object}\n */\nexport const outputSyncingFormatter = (result) => {\n    result.startingBlock = Utils.hexToNumber(result.startingBlock);\n    result.currentBlock = Utils.hexToNumber(result.currentBlock);\n    result.highestBlock = Utils.hexToNumber(result.highestBlock);\n    if (result.knownStates) {\n        result.knownStates = Utils.hexToNumber(result.knownStates);\n        result.pulledStates = Utils.hexToNumber(result.pulledStates);\n    }\n\n    return result;\n};\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nexport * as errors from './Errors';\nexport * as formatters from './Formatters'; // TODO: Most formatters could be removed with a web3-core-types module.\n"],"names":["JsonRpcResponseError","Error","constructor","response","JSON","stringify","result","NoConnectionError","host","NodeConnectionTimeoutError","ms","InvalidProviderError","providerName","InvalidParametersLengthError","got","expected","method","outputBigNumberFormatter","number","Utils","toString","isPredefinedBlockNumber","blockNumber","inputDefaultBlockNumberFormatter","moduleInstance","undefined","defaultBlock","inputBlockNumberFormatter","isString","toLowerCase","_txInputFormatter","txObject","to","inputAddressFormatter","data","input","gas","gasLimit","filter","key","forEach","inputCallFormatter","options","from","defaultAccount","inputTransactionFormatter","isNumber","isObject","inputSignFormatter","outputTransactionFormatter","tx","transactionIndex","nonce","gasPrice","value","outputTransactionReceiptFormatter","receipt","TypeError","cumulativeGasUsed","gasUsed","isArray","logs","map","outputLogFormatter","contractAddress","status","Boolean","parseInt","outputBlockFormatter","block","size","timestamp","difficulty","totalDifficulty","transactions","item","miner","inputLogFormatter","toTopic","String","indexOf","fromBlock","toBlock","topics","topic","address","addr","log","blockHash","transactionHash","logIndex","shaId","replace","substr","id","inputPostFormatter","post","ttl","workToProve","priority","outputPostFormatter","expiry","sent","workProved","iban","Iban","isValid","isDirect","toAddress","outputSyncingFormatter","startingBlock","currentBlock","highestBlock","knownStates","pulledStates"],"mappings":"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"}