{"version":3,"file":"web3-eth-ens.umd.js","sources":["../ressources/ABI/Registry.js","../ressources/ABI/Resolver.js","../src/Ens.js","../node_modules/underscore-es/_quickaccess.js","../node_modules/underscore-es/isFunction.js","../src/contracts/Registry.js","../src/handlers/ResolverMethodHandler.js","../src/factories/EnsModuleFactory.js","../src/index.js"],"sourcesContent":["export const REGISTRY_ABI = [\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'resolver',\n        outputs: [\n            {\n                name: '',\n                type: 'address'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'owner',\n        outputs: [\n            {\n                name: '',\n                type: 'address'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'label',\n                type: 'bytes32'\n            },\n            {\n                name: 'owner',\n                type: 'address'\n            }\n        ],\n        name: 'setSubnodeOwner',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'ttl',\n                type: 'uint64'\n            }\n        ],\n        name: 'setTTL',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'ttl',\n        outputs: [\n            {\n                name: '',\n                type: 'uint64'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'resolver',\n                type: 'address'\n            }\n        ],\n        name: 'setResolver',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'owner',\n                type: 'address'\n            }\n        ],\n        name: 'setOwner',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'owner',\n                type: 'address'\n            }\n        ],\n        name: 'Transfer',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: true,\n                name: 'label',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'owner',\n                type: 'address'\n            }\n        ],\n        name: 'NewOwner',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'resolver',\n                type: 'address'\n            }\n        ],\n        name: 'NewResolver',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'ttl',\n                type: 'uint64'\n            }\n        ],\n        name: 'NewTTL',\n        type: 'event'\n    }\n];\n\nmodule.exports = REGISTRY;\n","export const RESOLVER_ABI = [\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'interfaceID',\n                type: 'bytes4'\n            }\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                name: '',\n                type: 'bool'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'contentTypes',\n                type: 'uint256'\n            }\n        ],\n        name: 'ABI',\n        outputs: [\n            {\n                name: 'contentType',\n                type: 'uint256'\n            },\n            {\n                name: 'data',\n                type: 'bytes'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'hash',\n                type: 'bytes'\n            }\n        ],\n        name: 'setMultihash',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'multihash',\n        outputs: [\n            {\n                name: '',\n                type: 'bytes'\n            }\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'x',\n                type: 'bytes32'\n            },\n            {\n                name: 'y',\n                type: 'bytes32'\n            }\n        ],\n        name: 'setPubkey',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'content',\n        outputs: [\n            {\n                name: 'ret',\n                type: 'bytes32'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'addr',\n        outputs: [\n            {\n                name: 'ret',\n                type: 'address'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'contentType',\n                type: 'uint256'\n            },\n            {\n                name: 'data',\n                type: 'bytes'\n            }\n        ],\n        name: 'setABI',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'name',\n        outputs: [\n            {\n                name: 'ret',\n                type: 'string'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'name',\n                type: 'string'\n            }\n        ],\n        name: 'setName',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'hash',\n                type: 'bytes32'\n            }\n        ],\n        name: 'setContent',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'pubkey',\n        outputs: [\n            {\n                name: 'x',\n                type: 'bytes32'\n            },\n            {\n                name: 'y',\n                type: 'bytes32'\n            }\n        ],\n        payable: false,\n        type: 'function'\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                name: 'addr',\n                type: 'address'\n            }\n        ],\n        name: 'setAddr',\n        outputs: [],\n        payable: false,\n        type: 'function'\n    },\n    {\n        inputs: [\n            {\n                name: 'ensAddr',\n                type: 'address'\n            }\n        ],\n        payable: false,\n        type: 'constructor'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'a',\n                type: 'address'\n            }\n        ],\n        name: 'AddrChanged',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'hash',\n                type: 'bytes32'\n            }\n        ],\n        name: 'ContentChanged',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'name',\n                type: 'string'\n            }\n        ],\n        name: 'NameChanged',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: true,\n                name: 'contentType',\n                type: 'uint256'\n            }\n        ],\n        name: 'ABIChanged',\n        type: 'event'\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'node',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'x',\n                type: 'bytes32'\n            },\n            {\n                indexed: false,\n                name: 'y',\n                type: 'bytes32'\n            }\n        ],\n        name: 'PubkeyChanged',\n        type: 'event'\n    }\n];\n\nmodule.exports = RESOLVER;\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Ens.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nexport default class Ens {\n    /**\n     * @param {Registry} registry\n     * @param {ResolverMethodHandler} resolverMethodHandler\n     *\n     * @constructor\n     */\n    constructor(registry, resolverMethodHandler) {\n        this.registry = registry;\n        this.resolverMethodHandler = resolverMethodHandler;\n    }\n\n    /**\n     * Sets the provider for the registry and resolver object.\n     * This method will also set the provider in the NetworkPackage and AccountsPackage because they are used here.\n     *\n     * @method setProvider\n     *\n     * @param {Object|String} provider\n     * @param {Net} net\n     *\n     * @returns {Boolean}\n     */\n    setProvider(provider, net) {\n        return this.registry.setProvider(provider, net);\n    }\n\n    /**\n     * Returns an contract of type resolver\n     *\n     * @method resolver\n     *\n     * @param {String} name\n     *\n     * @returns {Promise<Contract>}\n     */\n    resolver(name) {\n        return this.registry.resolver(name);\n    }\n\n    /**\n     * Returns the address record associated with a name.\n     *\n     * @method getAddress\n     *\n     * @method getAddress\n     * @param {String} name\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @return {PromiEvent}\n     */\n    getAddress(name, callback) {\n        return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n    }\n\n    /**\n     * Sets a new address\n     *\n     * @method setAddress\n     *\n     * @param {String} name\n     * @param {String} address\n     * @param {Object} sendOptions\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    setAddress(name, address, sendOptions, callback) {\n        return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n    }\n\n    /**\n     * Returns the public key\n     *\n     * @method getPubkey\n     *\n     * @param {String} name\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    getPubkey(name, callback) {\n        return this.resolverMethodHandler.method(name, 'pubkey', []).call(callback);\n    }\n\n    /**\n     * Set the new public key\n     *\n     * @method setPubkey\n     *\n     * @param {String} name\n     * @param {String} x\n     * @param {String} y\n     * @param {Object} sendOptions\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    setPubkey(name, x, y, sendOptions, callback) {\n        return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n    }\n\n    /**\n     * Returns the content\n     *\n     * @method getContent\n     *\n     * @param {String} name\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    getContent(name, callback) {\n        return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n    }\n\n    /**\n     * Set the content\n     *\n     * @method setContent\n     *\n     * @param {String} name\n     * @param {String} hash\n     * @param {Object} sendOptions\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    setContent(name, hash, sendOptions, callback) {\n        return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n    }\n\n    /**\n     * Get the multihash\n     *\n     * @method getMultihash\n     *\n     * @param {String} name\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    getMultihash(name, callback) {\n        return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n    }\n\n    /**\n     * Set the multihash\n     *\n     * @method setMultihash\n     *\n     * @param {String} name\n     * @param {String} hash\n     * @param {Object} sendOptions\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    setMultihash(name, hash, sendOptions, callback) {\n        return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n    }\n}\n","// quick reference variables for speed access\n//-------------------------------------------\n\n// Save bytes in the minified (but not gzipped) version:\nexport const ArrayProto = Array.prototype;\nexport const ObjProto = Object.prototype;\nexport const SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport const push = ArrayProto.push;\nexport const slice = ArrayProto.slice;\nexport const toString = ObjProto.toString;\nexport const hasOwnProperty = ObjProto.hasOwnProperty;\n\n// All **ECMAScript 5** native function implementations that we hope to use\n// are declared here.\nexport const nativeIsArray = Array.isArray;\nexport const nativeKeys = Object.keys;\nexport const nativeCreate = Object.create;\n\n// Naked function reference for surrogate-prototype-swapping.\nexport const Ctor = function () {};","// `_isFunction` : an object's function\n// -------------------------------------\n\nimport {toString} from './_quickaccess';\n\n// Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n// IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nfunction customFunction() {\n\tif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof document !== 'undefined' && typeof document.childNodes != 'function') {\n\t\treturn (obj) => typeof obj == 'function' || false;\n\t}\n\treturn null;\n}\n\n// Is a given value a function?\nvar _isFunction = customFunction() || function (obj) {\n\treturn toString.call(obj) === '[object Function]';\n}\n\nexport {_isFunction as default};","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport isFunction from 'underscore-es/isFunction';\nimport namehash from 'eth-ens-namehash';\n\nexport default class Registry {\n    /**\n     * // TODO: Contract should be implemented over dependency inversion and not dependency injection\n     * @param {AbstractProviderAdapter|EthereumProvider} provider\n     * @param {Network} net\n     * @param {Accounts} accounts\n     * @param {Contract} ContractObject\n     * @param {Object} registryABI\n     * @param {Object} resolverABI\n     *\n     * @constructor\n     */\n    constructor(provider, net, accounts, ContractObject, registryABI, resolverABI) {\n        this.net = net;\n        this.accounts = accounts;\n        this.ContractObject = ContractObject;\n        this.registryABI = registryABI;\n        this.resolverABI = resolverABI;\n        this.provider = provider;\n\n        this.contract = this.checkNetwork().then((address) => {\n            return new this.ContractObject(this.provider, this.accounts, this.registryABI, address);\n        });\n    }\n\n    /**\n     * Sets the provider in NetworkPackage, AccountsPackage and the current object.\n     *\n     * @method setProvider\n     *\n     * @param {Object|String} provider\n     * @param {Net} net\n     *\n     * @returns {Boolean}\n     */\n    setProvider(provider, net) {\n        this.provider = this.providersPackage.resolve(provider, net);\n\n        return !!(this.net.setProvider(provider, net) && this.accounts.setProvider(provider, net) && this.provider);\n    }\n\n    /**\n     * Returns the address of the owner of an Ens name.\n     *\n     * @method owner\n     *\n     * @param {String} name\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {Promise<*>}\n     */\n    owner(name, callback) {\n        return new Promise((resolve, reject) => {\n            this.contract.then((contract) => {\n                contract.methods\n                    .owner(namehash.hash(name))\n                    .call()\n                    .then((receipt) => {\n                        resolve(receipt);\n\n                        if (isFunction(callback)) {\n                            callback(false, receipt);\n                        }\n                    })\n                    .catch((error) => {\n                        reject(error);\n\n                        if (isFunction(callback)) {\n                            callback(error, null);\n                        }\n                    });\n            });\n        });\n    }\n\n    /**\n     * Returns the resolver contract associated with a name.\n     *\n     * @method resolver\n     *\n     * @param {String} name\n     *\n     * @returns {Promise<Contract>}\n     */\n    resolver(name) {\n        return this.contract\n            .then((contract) => {\n                return contract.methods.resolver(namehash.hash(name)).call();\n            })\n            .then((address) => {\n                return new this.Contract.Contract(this.provider, this.accounts, this.resolverABI, address);\n            });\n    }\n\n    /**\n     * Checks if the current used network is synced and looks for Ens support there.\n     * Throws an error if not.\n     *\n     * @method checkNetwork\n     *\n     * @returns {Promise<String>}\n     */\n    checkNetwork() {\n        const ensAddresses = {\n            main: '0x314159265dD8dbb310642f98f50C066173C1259b',\n            ropsten: '0x112234455c3a32fd11230c42e7bccd4a84e02010',\n            rinkeby: '0xe7410170f87102df0055eb195163a03b7f2bff4a'\n        };\n\n        return this.net\n            .getBlock('latest', false)\n            .then((block) => {\n                const headAge = new Date() / 1000 - block.timestamp;\n                if (headAge > 3600) {\n                    throw new Error(`Network not synced; last block was ${headAge} seconds ago`);\n                }\n\n                return this.net.getNetworkType();\n            })\n            .then((networkType) => {\n                const addr = ensAddresses[networkType];\n                if (typeof addr === 'undefined') {\n                    throw new TypeError(`ENS is not supported on network ${networkType}`);\n                }\n\n                return addr;\n            });\n    }\n}\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport isFunction from 'underscore-es/isFunction';\nimport namehash from 'eth-ens-namehash';\n\nexport default class ResolverMethodHandler {\n    /**\n     * @param {Registry} registry\n     * @param {PromiEventPackage} promiEventPackage\n     *\n     * @constructor\n     */\n    constructor(registry, promiEventPackage) {\n        this.registry = registry;\n        this.promiEventPackage = promiEventPackage;\n    }\n\n    /**\n     * Executes an resolver method and returns an eventifiedPromise\n     *\n     * @param {String} ensName\n     * @param {String} methodName\n     * @param {Array} methodArguments\n     * @param {Function} callback\n     *\n     * @returns {Object}\n     */\n    method(ensName, methodName, methodArguments) {\n        return {\n            call: this.call.bind({\n                ensName,\n                methodName,\n                methodArguments,\n                parent: this\n            }),\n            send: this.send.bind({\n                ensName,\n                methodName,\n                methodArguments,\n                parent: this\n            })\n        };\n    }\n\n    /**\n     * Executes call\n     *\n     * @method call\n     *\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    call(callback) {\n        const promiEvent = new this.promiEventPackage.PromiEvent();\n\n        const preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n\n        this.parent.registry\n            .resolver(this.ensName)\n            .then((resolver) => {\n                this.parent.handleCall(promiEvent, resolver.methods[this.methodName], preparedArguments, callback);\n            })\n            .catch((error) => {\n                promiEvent.reject(error);\n            });\n\n        return promiEvent;\n    }\n\n    /**\n     * Executes send\n     *\n     * @method send\n     *\n     * @param {Object} sendOptions\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    send(sendOptions, callback) {\n        const promiEvent = new this.promiEventPackage.PromiEvent();\n\n        const preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n\n        this.parent.registry\n            .resolver(this.ensName)\n            .then((resolver) => {\n                this.parent.handleSend(\n                    promiEvent,\n                    resolver.methods[this.methodName],\n                    preparedArguments,\n                    sendOptions,\n                    callback\n                );\n            })\n            .catch((error) => {\n                promiEvent.reject(error);\n            });\n\n        return promiEvent;\n    }\n\n    /**\n     * Handles a call method\n     *\n     * @method handleCall\n     *\n     * @param {PromiEvent} promiEvent\n     * @param {function} method\n     * @param {Array} preparedArguments\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    handleCall(promiEvent, method, preparedArguments, callback) {\n        method\n            .apply(this, preparedArguments)\n            .call()\n            .then((receipt) => {\n                promiEvent.resolve(receipt);\n\n                if (isFunction(callback)) {\n                    callback(receipt);\n                }\n            })\n            .catch((error) => {\n                promiEvent.reject(error);\n\n                if (isFunction(callback)) {\n                    callback(error);\n                }\n            });\n\n        return promiEvent;\n    }\n\n    /**\n     * Handles a send method\n     *\n     * @method handleSend\n     *\n     * @param {PromiEvent} promiEvent\n     * @param {function} method\n     * @param {Array} preparedArguments\n     * @param {Object} sendOptions\n     * @param {Function} callback\n     *\n     * @callback callback callback(error, result)\n     * @returns {PromiEvent}\n     */\n    handleSend(promiEvent, method, preparedArguments, sendOptions, callback) {\n        method\n            .apply(this, preparedArguments)\n            .send(sendOptions)\n            .on('transactionHash', (hash) => {\n                promiEvent.emit('transactionHash', hash);\n            })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                promiEvent.emit('confirmation', confirmationNumber, receipt);\n            })\n            .on('receipt', (receipt) => {\n                promiEvent.emit('receipt', receipt);\n                promiEvent.resolve(receipt);\n\n                if (isFunction(callback)) {\n                    callback(receipt);\n                }\n            })\n            .on('error', (error) => {\n                promiEvent.emit('error', error);\n                promiEvent.reject(error);\n\n                if (isFunction(callback)) {\n                    callback(error);\n                }\n            });\n\n        return promiEvent;\n    }\n\n    /**\n     * Adds the Ens node to the arguments\n     *\n     * @method prepareArguments\n     *\n     * @param {String} name\n     * @param {Array} methodArguments\n     *\n     * @returns {Array}\n     */\n    prepareArguments(name, methodArguments) {\n        const node = namehash.hash(name);\n\n        if (methodArguments.length > 0) {\n            methodArguments.unshift(node);\n\n            return methodArguments;\n        }\n\n        return [node];\n    }\n}\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file EnsModuleFactory.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport Ens from '../Ens';\nimport Registry from '../contracts/Registry';\nimport ResolverMethodHandler from '../handlers/ResolverMethodHandler';\n\nexport default class EnsModuleFactory {\n    /**\n     * Returns an object of type Ens\n     *\n     * @method createENS\n     *\n     * @param {AbstractProviderAdapter|EthereumProvider} provider\n     * @param {Network} net\n     * @param {Accounts} accounts\n     * @param {Contract} Contract\n     * @param {Object} registryAbi\n     * @param {Object} resolverAbi\n     * @param {PromiEvent} PromiEvent\n     *\n     * @returns {Ens}\n     */\n    createENS(provider, net, accounts, Contract, registryAbi, resolverAbi, PromiEvent) {\n        const registry = this.createRegistry(provider, net, accounts, Contract, registryAbi, resolverAbi);\n\n        return new Ens(registry, this.createResolverMethodHandler(registry, PromiEvent));\n    }\n\n    /**\n     * Returns an object of type Registry\n     *\n     * @method createRegistry\n     *\n     * @param {AbstractProviderAdapter|EthereumProvider} provider\n     * @param {Network} net\n     * @param {Accounts} accounts\n     * @param {Contract} Contract\n     * @param {Object} registryAbi\n     * @param {Object} resolverAbi\n     *\n     * @returns {Registry}\n     */\n    createRegistry(provider, net, accounts, Contract, registryAbi, resolverAbi) {\n        return new Registry(provider, net, accounts, Contract, registryAbi, resolverAbi);\n    }\n\n    /**\n     * Returns an object of type ResolverMethodHandler\n     *\n     * @method createResolverMethodHandler\n     *\n     * @param {Registry} registry\n     * @param {PromiEvent} PromiEvent\n     *\n     * @returns {ResolverMethodHandler}\n     */\n    createResolverMethodHandler(registry, PromiEvent) {\n        return new ResolverMethodHandler(registry, PromiEvent);\n    }\n}\n","/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport {Contract} from 'web3-eth-contract';\nimport {PromiEvent} from 'web3-core-promievent';\nimport {REGISTRY_ABI} from '../ressources/ABI/Registry';\nimport {RESOLVER_ABI} from '../ressources/ABI/Resolver';\nimport EnsModuleFactory from './factories/EnsModuleFactory';\n\n/**\n * TODO: Contracts should be implemented over dependency inversion not injection.\n * TODO: Refactor Ens\n * Returns the Ens object\n *\n * @method Ens\n *\n * @param {AbstractProviderAdapter|EthereumProvider} provider\n * @param {Network} net\n * @param {Accounts} accounts\n *\n * @returns {Ens}\n */\nexport const Ens = (provider, net, accounts) => {\n    return new EnsModuleFactory().createENS(provider, net, accounts, Contract, REGISTRY_ABI, RESOLVER_ABI, PromiEvent);\n};\n"],"names":["REGISTRY_ABI","constant","inputs","name","type","outputs","payable","anonymous","indexed","module","exports","REGISTRY","RESOLVER_ABI","stateMutability","RESOLVER","Ens","constructor","registry","resolverMethodHandler","setProvider","provider","net","resolver","getAddress","callback","method","call","setAddress","address","sendOptions","send","getPubkey","setPubkey","x","y","getContent","setContent","hash","getMultihash","setMultihash","Registry","accounts","ContractObject","registryABI","resolverABI","contract","checkNetwork","then","providersPackage","resolve","owner","Promise","reject","methods","namehash","receipt","isFunction","catch","error","Contract","ensAddresses","main","ropsten","rinkeby","getBlock","block","headAge","Date","timestamp","Error","getNetworkType","networkType","addr","TypeError","ResolverMethodHandler","promiEventPackage","ensName","methodName","methodArguments","bind","parent","promiEvent","PromiEvent","preparedArguments","prepareArguments","handleCall","handleSend","apply","on","emit","confirmationNumber","node","length","unshift","EnsModuleFactory","createENS","registryAbi","resolverAbi","createRegistry","createResolverMethodHandler"],"mappings":"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"}